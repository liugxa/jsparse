<?xml version="1.0"	encoding="UTF-8"?>
<!-- edited	with XMLSpy	v2006 sp1 U	(http://www.altova.com)	by Carla Lotito	(Platform Computing) -->
<!-- edited	by (Platform Computing Inc.) -->
<xs:schema xmlns:app="http://www.platform.com/Symphony/Profile/Application"	xmlns:xs="http://www.w3.org/2001/XMLSchema"	targetNamespace="http://www.platform.com/Symphony/Profile/Application" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation>
			This schema	describes the configuration	file format	for	the	Application	Profile. 
		</xs:documentation>
	</xs:annotation>
	<xs:element	name="Profile">
		<xs:annotation>
			<xs:documentation>
				The	base of	the	Application	Profile.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element	name="Consumer">
					<xs:annotation>
						<xs:documentation>
						Settings related to the application and resources assigned
to the consumer associated with the application.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:attribute name="applicationName" type="xs:normalizedString"	use="required">
							<xs:annotation>
								<xs:documentation>
								Name of the application associated with the consumer.
The application name must be unique within the cluster.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="consumerId"	type="xs:string" use="required">
							<xs:annotation>
								<xs:documentation>
							  Name and path of the consumer with which to associate
this application. The consumer must already exist in Symphony. The
consumer you associate with the application determines how Symphony
allocates resources to the application.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="resourceGroupName" type="xs:string"	use="optional">
							<xs:annotation>
								<xs:documentation>
							  Resource group from which resources are requested to
run service instance managers and services to perform computations
for clients. The resource group should contain compute hosts, not
management hosts. The resource group must be an existing resource
group in EGO. 
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="resReq"	type="xs:string" use="required"	default="select(!mg)">
							<xs:annotation>
								<xs:documentation>
							  String that describes criteria for selecting resources
allocated to a consumer for compute hosts. 
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="policy"	use="optional" default="R_Proportion">
							<xs:annotation>
								<xs:documentation>
								Specifies the workload scheduling policy used. The scheduling
policy determines how and when Symphony allocates resources to run
services for the application.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction	base="xs:normalizedString">
									<xs:enumeration	value="R_Proportion"/>
									<xs:enumeration	value="R_MinimumServices"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="taskHighWaterMark" use="optional" default="1.0">
							<xs:annotation>
								<xs:documentation>
								Applies to the whole application. Ratio used to determine
whether more CPU slots need to be requested in order to meet the
service level agreement of the application. The ratio is the maximum
number of unprocessed tasks in open sessions to CPU slots.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction	base="xs:decimal">
									<xs:minExclusive value="0.0"/>
									<xs:fractionDigits value="5"/>
									<xs:totalDigits	value="15"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="taskLowWaterMark" use="optional" default="0.0">
							<xs:annotation>
								<xs:documentation>
								  Applies to the whole application. Ratio used to determine
whether idle CPU slots are released and made available for other
applications to use. The ratio is the minimum number of pending
tasks in open sessions to CPU slots.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction	base="xs:decimal">
									<xs:minInclusive value="0.0"/>
									<xs:fractionDigits value="5"/>
									<xs:totalDigits	value="15"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="resourceBalanceInterval" use="optional"	default="5">
							<xs:annotation>
								<xs:documentation>
								Minimum number of seconds between checks to determine
whether the session manager should release unused resources or request
additional resources for the application.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction	base="xs:nonNegativeInteger">
									<xs:minInclusive value="0"/>
									<xs:maxInclusive value="2147483647"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="sessionSchedulingInterval" use="optional" default="500">
							<xs:annotation>
								<xs:documentation>
				Minimum number of milliseconds between checks to determine
whether compute resources need to be reallocated among sessions.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction	base="xs:positiveInteger">
									<xs:maxInclusive value="2147483647"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="applicationLingerTime" use="optional" default="300">
							<xs:annotation>
								<xs:documentation>
								For information purposes only. Setting is not used by
the system.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction	base="xs:nonNegativeInteger">
									<xs:minInclusive value="0"/>
									<xs:maxInclusive value="2147483647"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="preStartApplication" type="xs:boolean" use="optional" default="false">
							<xs:annotation>
								<xs:documentation>
								Specifies whether the session manager, service instance
manager, and service instances are prestarted when Symphony is started,
or when an application is enabled.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="numOfPreloadedServices"	use="optional" default="1">
							<xs:annotation>
								<xs:documentation>
								Used with pre-start application. Defines the number of
service instances that are prestarted if preStartApplication is
true.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction	base="xs:positiveInteger">
									<xs:maxInclusive value="2147483647"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="transientDisconnectionTimeout" use="optional" default="10">
							<xs:annotation>
								<xs:documentation>
								Number of seconds the session manager waits for the client
to reconnect before it aborts the session when the connection between
the client and session manager is broken.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction	base="xs:nonNegativeInteger">
									<xs:minInclusive value="0"/>
									<xs:maxInclusive value="2147483647"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="ssmRecoveryTime" use="optional"	default="10">
							<xs:annotation>
								<xs:documentation>
								Number of minutes to wait for the session manager to
recover from an abnormal exit before the resources in the resource
group defined in the Consumer > resourceGroupName attribute are
automatically released by Platform EGO.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction	base="xs:nonNegativeInteger">
									<xs:minInclusive value="0"/>
									<xs:maxInclusive value="2147483647"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="flushDataAsap" type="xs:boolean" use="optional"	default="false">
							<xs:annotation>
								<xs:documentation>
								Used for recoverable sessions. Specifies whether or not
the session manager caches data before writing to disk.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="ioRetryDelay" type="xs:nonNegativeInteger" use="optional" default="1">
							<xs:annotation>
								<xs:documentation>
                               Specifies the amount of time to wait, in seconds, before
retrying an I/O operation after a previous failure.
			   </xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:element	name="SOAM"	minOccurs="0">
					<xs:annotation>
						<xs:documentation>
						The SOAM section contains configuration related to system
behavior such as session manager, service instance manager, and
how Symphony writes data to disk.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element	name="SSM">
								<xs:annotation>
									<xs:documentation>
									Configuration related to session manager behavior.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType	mixed="true">
									<xs:sequence>
										<xs:element	name="osTypes">
											<xs:annotation>
												<xs:documentation>
													 Operating system environment in which to run the service.
Symphony uses this information to determine where the executable
for the service is located.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element	name="osType" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation>
															Operating system environment in which to run the session
manager. Symphony uses this information to determine where the executable
for the session manager is located.
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element	name="env" minOccurs="0" maxOccurs="unbounded">
																	<xs:annotation>
																		<xs:documentation>
																			Name of an environment variable to be applied to the
service. 
																		</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:simpleContent>
																			<xs:extension base="xs:normalizedString">
																				<xs:attribute name="name" type="xs:normalizedString" use="required">
																					<xs:annotation>
																						<xs:documentation>
																						Name of an environment variable to be applied to the
service. 
																						</xs:documentation>
																					</xs:annotation>
																				</xs:attribute>
																			</xs:extension>
																		</xs:simpleContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
															<xs:attribute name="name" type="xs:string" use="required">
																<xs:annotation>
																	<xs:documentation>
																	Name of an environment variable to be applied to the
service. 
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="logDirectory" type="xs:normalizedString" use="optional">
																<xs:annotation>
																	<xs:documentation>
																	Used for log retrieval through the Platform Management
Console. Path to the directory in which logs are written by services
for this application. The path can be any desired path but the path
must be the same on all compute hosts. 
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="fileNamePattern" type="xs:normalizedString"	use="optional">
																<xs:annotation>
																	<xs:documentation>
																	Used for log retrieval through the Platform Management
Console. File naming convention for service log files written to
the logDirectory. Specify how your files are named. When retrieving
logs for a specific task, the system will look for log files that
partially match the file name pattern. If you are going to name
files with the task ID or session ID, specify the variables %taskId%
or %sessionId%. 
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="subDirectoryPattern" type="xs:normalizedString"	use="optional">
																<xs:annotation>
																	<xs:documentation>
																	Used for log retrieval through the Platform Management
Console. Convention for naming subdirectories in the logDirectory.
If you want to name subdirectories according to session ID or task
ID use the variables %sessionId%, %taskId%. When retrieving logs,
the system will look for log files in subdirectories that partially match
the sub-directory pattern.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="startCmd" type="xs:string" use="required">
																<xs:annotation>
																	<xs:documentation>
																	Relative path to the program executable for the service.
Use ${SOAM_DEPLOY_DIR} in your path as this is the deployment directory
in the system. For example, ${SOAM_DEPLOY_DIR}/myservice/myservice.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="workDir" type="xs:string" use="optional">
																<xs:annotation>
																	<xs:documentation>
																	Absolute or relative path on the compute host or a shared
location, to the directory in which the service creates files. A
relative path is relative to SOAM_HOME.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="runAs" type="xs:string"	use="optional">
																<xs:annotation>
																	<xs:documentation>
																	For information purposes only. Setting is not used by
the system.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="packageUrl"	type="xs:normalizedString" use="optional">
																<xs:annotation>
																	<xs:documentation>
																	  For information purposes only. Setting is not used by
the system.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="preExecCmd"	type="xs:string" use="optional">
																<xs:annotation>
																	<xs:documentation>
																	 When using a deployment tool other than soamdeploy, the
command specified here is used to copy the service program to the
local hos where the pre-execution command is running.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="postExecCmd" type="xs:string" use="optional">
																<xs:annotation>
																	<xs:documentation>
																	For information purposes only. Setting is not used by
the system.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element	name="boundaryManagerConfig" minOccurs="0">
											<xs:annotation>
												<xs:documentation>
													Configuration for the boundary manager.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element	name="elementDefinitions" minOccurs="0">
														<xs:annotation>
															<xs:documentation>
																The	various	elements of	the	boundary manager.
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element	name="boundaryElement" minOccurs="0" maxOccurs="unbounded">
																	<xs:annotation>
																		<xs:documentation>
																		For internal system use only.
																		</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element	name="additionalConfig"	minOccurs="0" maxOccurs="unbounded">
																				<xs:annotation>
																					<xs:documentation>
																						For internal system use only.
																					</xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:attribute name="name" type="xs:string">
																						<xs:annotation>
																							<xs:documentation>
																							Specifies whether the system monitors the amount of virtual
memory or virtual address space on the session manager host. 
																							</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																					<xs:attribute name="value" type="xs:string">
																						<xs:annotation>
																							<xs:documentation>
																							Specifies the value of a boundary event as a percentage
of the entire resource available.
																						</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																		<xs:attribute name="name" type="xs:string">
																			<xs:annotation>
																				<xs:documentation>
																				For internal system use only.
																				</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																		<xs:attribute name="description" type="xs:string">
																			<xs:annotation>
																				<xs:documentation>
																				For internal system use only.
																				</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																		<xs:attribute name="minValue" type="xs:double">
																			<xs:annotation>
																				<xs:documentation>
																					For internal system use only.
																				</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																		<xs:attribute name="maxValue" type="xs:double">
																			<xs:annotation>
																				<xs:documentation>
																				For internal system use only.
																				</xs:documentation>
																			</xs:annotation>
																		</xs:attribute>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element	name="boundaries" minOccurs="0">
														<xs:annotation>
															<xs:documentation>
																The	list of	boundaries.
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element	name="boundary"	minOccurs="0" maxOccurs="unbounded">
																	<xs:annotation>
																		<xs:documentation>
																			A single boundary element.
																		</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:sequence>
																			<xs:element	name="event" minOccurs="0" maxOccurs="unbounded">
																				<xs:annotation>
																					<xs:documentation>
																						An event for a boundary.
																					</xs:documentation>
																				</xs:annotation>
																				<xs:complexType>
																					<xs:attribute name="name">
																						<xs:annotation>
																							<xs:documentation>
																							Specifies the name of the boundary event that triggers
a system response when the value of the event is reached.
																							</xs:documentation>
																						</xs:annotation>
																						<xs:simpleType>
																							<xs:restriction	base="xs:string">
																								<xs:enumeration	value="BEV_PROACTIVE"/>
																								<xs:enumeration	value="BEV_SEVERE"/>
																								<xs:enumeration	value="BEV_CRITICAL"/>
																								<xs:enumeration	value="BEV_HALT"/>
																							</xs:restriction>
																						</xs:simpleType>
																					</xs:attribute>
																					<xs:attribute name="value" type="xs:double">
																						<xs:annotation>
																							<xs:documentation>
																							Specifies the value of a boundary event as a percentage
of the entire resource available.
																							</xs:documentation>
																						</xs:annotation>
																					</xs:attribute>
																				</xs:complexType>
																			</xs:element>
																		</xs:sequence>
																		<xs:attribute name="elementName">
																			<xs:annotation>
																				<xs:documentation>
																				Specifies whether the system monitors the amount of virtual
memory or virtual address space on the session manager host. 
																				</xs:documentation>
																			</xs:annotation>
																			<xs:simpleType>
																				<xs:restriction	base="xs:string"/>
																			</xs:simpleType>
																		</xs:attribute>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
														</xs:complexType>
													</xs:element>
													<xs:element	name="globalConfig"	minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation>
															For internal system use only.
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:attribute name="name">
																<xs:annotation>
																	<xs:documentation>
																		For internal system use only.
																	</xs:documentation>
																</xs:annotation>
																<xs:simpleType>
																	<xs:restriction	base="xs:string">
																		<xs:enumeration	value="dataCollectionInterval"/>
																		<xs:enumeration	value="memoryReserveInKilobytes"/>
																	</xs:restriction>
																</xs:simpleType>
															</xs:attribute>
															<xs:attribute name="value" type="xs:string">
																<xs:annotation>
																	<xs:documentation>
																	For internal system use only.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="enabled" type="xs:boolean"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="startUpTimeout"	type="xs:positiveInteger" default="60">
										<xs:annotation>
											<xs:documentation>
												Number of seconds to wait for the session manager to
start up before the process times out and the host on which the
session manager failed to start is blocked.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="shutDownTimeout" type="xs:positiveInteger" default="300">
										<xs:annotation>
											<xs:documentation>
											Number of seconds to wait for the session manager to
shut down before the session director considers it as timed out
and restarts the session manager.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="disableFlowControl"	type="xs:boolean" default="false">
										<xs:annotation>
											<xs:documentation>
											For internal system use only. 
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="resReq"	type="xs:string" use="required">
										<xs:annotation>
											<xs:documentation>
												String that describes criteria for selecting resources
allocated to the session manager. 
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="resourceGroupName" type="xs:string"	use="optional">
										<xs:annotation>
											<xs:documentation>
												Resource group from which resources are requested to
run session managers. The resource group should be a management
host resource group and must be an existing resource group in EGO. 
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
							<xs:element	name="SIM">
								<xs:annotation>
									<xs:documentation>
										Configuration for service instance managers.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element	name="osTypes">
											<xs:annotation>
												<xs:documentation>
													
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element	name="osType" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation>
                                                           Specifies the operating system environment in which to
run the service instance manager. Symphony uses this information
to determine where the executable for the service instance manager
is located.
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:sequence>
																<xs:element	name="env" minOccurs="0" maxOccurs="unbounded">
																	<xs:annotation>
																		<xs:documentation>
                                                                          Environment variables to be applied to the service instance
manager.
																		</xs:documentation>
																	</xs:annotation>
																	<xs:complexType>
																		<xs:simpleContent>
																			<xs:extension base="xs:normalizedString">
																				<xs:attribute name="name" type="xs:normalizedString" use="required">
																					<xs:annotation>
																						<xs:documentation>
                                                                                           Environment variable to be applied to the service instance
manager process. 
																						</xs:documentation>
																					</xs:annotation>
																				</xs:attribute>
																			</xs:extension>
																		</xs:simpleContent>
																	</xs:complexType>
																</xs:element>
															</xs:sequence>
															<xs:attribute name="name" type="xs:string" use="required">
																<xs:annotation>
																	<xs:documentation>
																		Specifies the operating system environment in which to
run the service instance manager. Symphony uses this information
to determine where the executable for the service instance manager
is located.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="startCmd" type="xs:string" use="required">
																<xs:annotation>
																	<xs:documentation>
                                                                       Relative or absolute path to the program executable for
the service instance manager.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="workDir" type="xs:string" use="optional">
																<xs:annotation>
																	<xs:documentation>
																	Service instance manager work directory. Absolute or
relative path to the working directory in which the service instance
manager creates files. On linux, the service instance manager only
creates core files in addition to log files in the logs directory. On
Windows, no files are created. The working directory is used for
starting the service instance manager process.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
															<xs:attribute name="runAs" type="xs:string"	use="optional">
																<xs:annotation>
																	<xs:documentation>
                                                                       For information purposes only. Setting is not used by
the system.
																	</xs:documentation>
																</xs:annotation>
															</xs:attribute>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="startUpTimeout"	type="xs:positiveInteger" use="optional" default="120">
										<xs:annotation>
											<xs:documentation>
											Number of seconds to wait for the service instance manager
to start up before the process times out and the host on which the
service instance manager failed to start is blocked.
                                            </xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="blockHostOnTimeout" type="xs:boolean" use="optional" default="true">
                                        <xs:annotation>
                                            <xs:documentation>
                                                Specifies whether the host can be blocked if timeout happens when SIM registers itself to SSM
                                                Values: true | false
                                            </xs:documentation>
                                        </xs:annotation>
                                    </xs:attribute>
                                    <xs:attribute name="blockHostOnVersionMismatch" type="xs:boolean" use="optional" default="true">
                                        <xs:annotation>
                                            <xs:documentation>
                                                Specifies whether the host can be blocked if version mismatching happens when SIM registers itself to SSM
                                                Values: true | false
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
							<xs:element	name="DataHistory" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										Configuration for historical data.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attribute name="pollFrequency" use="optional" default="10">
										<xs:annotation>
											<xs:documentation>
											Specifies the frequency, in seconds, at which the history
files are polled to determine if the current file should be archived.
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:positiveInteger">
												<xs:minInclusive value="1"/>
												<xs:maxInclusive value="10"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="fileSwitchTime"	use="optional" default="24">
										<xs:annotation>
											<xs:documentation>
												Maximum number of hours that can elapse before the history
file is archived at the next polling interval.
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:positiveInteger">
												<xs:minInclusive value="1"/>
												<xs:maxInclusive value="168"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="fileSwitchSize"	use="optional" default="100">
										<xs:annotation>
											<xs:documentation>
											Maximum size, in megabytes, the history file can reach
before the file is archived at the next polling interval.
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:positiveInteger">
												<xs:minInclusive value="1"/>
												<xs:maxInclusive value="100"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="lastingPeriod" use="optional" default="96">
										<xs:annotation>
											<xs:documentation>
											Number of hours the archived history files are retained
before deleted. 
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:positiveInteger">
												<xs:minInclusive value="1"/>
												<xs:maxInclusive value="168"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="lastingPeriodInSeconds"	type="xs:positiveInteger" use="optional">
										<xs:annotation>
											<xs:documentation>
												For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="path" type="xs:string" use="optional">
										<xs:annotation>
											<xs:documentation>
											Directory where the files are stored for historical data. 
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="delimiter" type="xs:string"	use="optional" default=",">
										<xs:annotation>
											<xs:documentation>
												For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
							<xs:element	name="PagingTasksInput"	minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										Configuration for handling paging for input.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence minOccurs="0">
										<xs:element	name="PagingMode" minOccurs="3"	maxOccurs="3">
											<xs:annotation>
												<xs:documentation>
											For internal system use only.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="name" type="xs:normalizedString" use="required">
													<xs:annotation>
														<xs:documentation>
														For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="readPriority" type="xs:positiveInteger"	use="required">
													<xs:annotation>
														<xs:documentation>
														For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="writePriority" type="xs:positiveInteger" use="required">
													<xs:annotation>
														<xs:documentation>
														For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="removePriority"	type="xs:positiveInteger" use="required">
													<xs:annotation>
														<xs:documentation>
														For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="path" type="xs:normalizedString" use="optional">
										<xs:annotation>
											<xs:documentation>
										Directory where paging files are stored. 
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="blockSize" type="xs:positiveInteger" use="optional"	default="4096">
										<xs:annotation>
											<xs:documentation>
											Specifies the number of bytes per block for paging. The
block size should be large enough to contain the largest message.
If the block size is not large enough, the data is spread across
multiple blocks, which can slow down paging processes.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="diskSpace" type="xs:unsignedLong" use="optional" default="4294967296">
										<xs:annotation>
											<xs:documentation>
											Maximum amount of disk space, in bytes, dedicated to
paging task input messages.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="bitmapBits"	type="xs:unsignedLong" use="optional" default="4194304">
										<xs:annotation>
											<xs:documentation>
										Specifies the maximum number of bits in available in
memory to track storage availability for paging.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="pmeType" type="xs:positiveInteger" use="optional" default="2">
										<xs:annotation>
											<xs:documentation>
											For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
							<xs:element	name="PagingTasksOutput" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										Configuration for handling paging for task output.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence minOccurs="0">
										<xs:element	name="PagingMode" minOccurs="3"	maxOccurs="3">
											<xs:annotation>
												<xs:documentation>
												For internal system use only.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="name" type="xs:normalizedString" use="required">
													<xs:annotation>
														<xs:documentation>
														For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="readPriority" type="xs:positiveInteger"	use="required">
													<xs:annotation>
														<xs:documentation>
														For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="writePriority" type="xs:positiveInteger" use="required">
													<xs:annotation>
														<xs:documentation>
													For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="removePriority"	type="xs:positiveInteger" use="required">
													<xs:annotation>
														<xs:documentation>
															For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="path" type="xs:normalizedString" use="optional">
										<xs:annotation>
											<xs:documentation>
											Directory where the files are stored for paging. 
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="blockSize" type="xs:positiveInteger" use="optional"	default="4096">
										<xs:annotation>
											<xs:documentation>
											Specifies the number of bytes per block for paging. The
block size should be large enough to contain the largest message.
If the block size is not large enough, the data is spread across
multiple blocks, which can slow down paging processes.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="diskSpace" type="xs:unsignedLong" use="optional" default="4294967296">
										<xs:annotation>
											<xs:documentation>
											Maximum amount of disk space, in bytes, dedicated to
paging task output messages.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="bitmapBits"	type="xs:unsignedLong" use="optional" default="4194304">
										<xs:annotation>
											<xs:documentation>
											Specifies the maximum number of bits in available in
memory to track storage availability for paging.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="pmeType" type="xs:positiveInteger" use="optional" default="2">
										<xs:annotation>
											<xs:documentation>
											For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
							<xs:element	name="PagingCommonData"	minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										Configuration for paging the common	data sent to services.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence minOccurs="0">
										<xs:element	name="PagingMode" minOccurs="3"	maxOccurs="3">
											<xs:annotation>
												<xs:documentation>
												For internal system use only.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="name" type="xs:normalizedString" use="required">
													<xs:annotation>
														<xs:documentation>
														 For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="readPriority" type="xs:positiveInteger"	use="required">
													<xs:annotation>
														<xs:documentation>
														For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="writePriority" type="xs:positiveInteger" use="required">
													<xs:annotation>
														<xs:documentation>
														For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="removePriority"	type="xs:positiveInteger" use="required">
													<xs:annotation>
														<xs:documentation>
														For internal system use only.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="path" type="xs:normalizedString" use="optional">
										<xs:annotation>
											<xs:documentation>
												Directory where the files are stored for common data. 
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="blockSize" type="xs:positiveInteger" use="optional"	default="4096">
										<xs:annotation>
											<xs:documentation>
											Specifies the number of bytes per block for paging. The
block size should be large enough to contain the largest message.
If the block size is not large enough, the data is spread across
multiple blocks, which can slow down paging processes.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="diskSpace" type="xs:unsignedLong" use="optional" default="4294967296">
										<xs:annotation>
											<xs:documentation>
												Specifies the maximum amount of disk space, in bytes,
dedicated to paging.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="bitmapBits"	type="xs:unsignedLong" use="optional" default="4194304">
										<xs:annotation>
											<xs:documentation>
											Specifies the maximum number of bits in available in
memory to track storage availability for paging common data.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="pmeType" type="xs:positiveInteger" use="optional" default="2">
										<xs:annotation>
											<xs:documentation>
											For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
							<xs:element	name="JournalingTasks" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										Configuration for the journaling system.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attribute name="path" type="xs:normalizedString" use="optional">
										<xs:annotation>
											<xs:documentation>
											Directory where the files are stored for journaling. 
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="blockSize" type="xs:positiveInteger" use="optional"	default="256">
										<xs:annotation>
											<xs:documentation>
											Specifies the number of bytes per block for journaling.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="diskSpace" type="xs:unsignedLong" use="optional" default="1073741824">
										<xs:annotation>
											<xs:documentation>
											Specifies the maximum amount of disk space, in bytes,
dedicated to journaling.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="bitmapBits"	type="xs:unsignedLong" use="optional" default="2000000">
										<xs:annotation>
											<xs:documentation>
											Specifies the maximum number of bits in available in
memory to track storage availability for journaling.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="pmeType" type="xs:positiveInteger" use="optional" default="2">
										<xs:annotation>
											<xs:documentation>
												For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
							<xs:element	name="JournalingSessions" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
									For internal system use only.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attribute name="path" type="xs:normalizedString" use="optional">
										<xs:annotation>
											<xs:documentation>
												For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="blockSize" type="xs:positiveInteger" use="optional"	default="2048">
										<xs:annotation>
											<xs:documentation>
											For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="diskSpace" type="xs:unsignedLong" use="optional" default="536870912">
										<xs:annotation>
											<xs:documentation>
											For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="bitmapBits"	type="xs:unsignedLong" use="optional" default="10000">
										<xs:annotation>
											<xs:documentation>
											For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="pmeType" type="xs:positiveInteger" use="optional" default="2">
										<xs:annotation>
											<xs:documentation>
											For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
							<xs:element	name="JournalingSessionTagConfig" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
								For internal system use only.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attribute name="path" type="xs:normalizedString" use="optional">
										<xs:annotation>
											<xs:documentation>
											For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="blockSize" type="xs:positiveInteger" use="optional"	default="256">
										<xs:annotation>
											<xs:documentation>
												For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="diskSpace" type="xs:unsignedLong" use="optional" default="30000">
										<xs:annotation>
											<xs:documentation>
												For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="bitmapBits"	type="xs:unsignedLong" use="optional" default="100">
										<xs:annotation>
											<xs:documentation>
												For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="pmeType" type="xs:positiveInteger" use="optional" default="2">
										<xs:annotation>
											<xs:documentation>
											For internal system use only.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element	name="SessionTypes"	minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>
							Configuration for types	of sessions.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element	name="Type"	minOccurs="0" maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>
										
								</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:attribute name="name" type="xs:string" use="required">
										<xs:annotation>
											<xs:documentation>
											Session type for which charateristics are defined. The
session type name must match the session type name used in the client
application when creating a session.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="serviceName" type="xs:normalizedString"	use="optional">
										<xs:annotation>
											<xs:documentation>
											Specify a service name only when multiple services are
defined in the application profile and when you want to assign the
session type a different service than the default service.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="priority" use="optional" default="1">
										<xs:annotation>
											<xs:documentation>
												Specifies the session priority, where 1 is the lowest
priority and 10000 is the highest priority. Session priority determines
how resources are assigned to sessions.
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:positiveInteger">
												<xs:minInclusive value="1"/>
												<xs:maxInclusive value="10000"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="minServices" use="optional"	default="0">
										<xs:annotation>
											<xs:documentation>
												Minimum number of CPU slots required for sessions of
this type. Used in conjunction with the R_MinimumServices scheduling
policy.
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:nonNegativeInteger">
												<xs:minInclusive value="0"/>
												<xs:maxInclusive value="10000"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="recoverable" type="xs:boolean" use="optional" default="false">
										<xs:annotation>
											<xs:documentation>
											Specifies whether the session can be recovered if the
session manager is recovered.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="sessionRetryLimit" use="optional" default="3">
										<xs:annotation>
											<xs:documentation>
											Specifies the number of times the session can retry binding
to the service before the session is aborted.
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:nonNegativeInteger">
												<xs:minInclusive value="0"/>
												<xs:maxInclusive value="2147483647"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="taskRetryLimit"	use="optional" default="3">
										<xs:annotation>
											<xs:documentation>
												Specifies the number of attempts to run a task before
it is considered to have failed.
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:nonNegativeInteger">
												<xs:minInclusive value="0"/>
												<xs:maxInclusive value="2147483647"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="taskGracePeriod" use="optional"	default="100">
										<xs:annotation>
											<xs:documentation>
												 Number of milliseconds to allow tasks in a session to
continue running when the corresponding session has been targeted
for suspension by the system or a user. If the task completes during
this period, it sends back its results. When the task grace period
expires, the tasks of the relevant session are canceled and the
session is suspended.
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:nonNegativeInteger">
												<xs:minInclusive value="0"/>
												<xs:maxInclusive value="2147483647"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="taskCleanupPeriod" use="optional" default="250">
										<xs:annotation>
											<xs:documentation>
											Number of milliseconds to allow tasks in a session to
continue running and clean up when the corresponding session has
been targeted to be aborted by the system or a user. When the task
cleanup period expires, the tasks of the corresponding session are
canceled and the session is aborted.
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:nonNegativeInteger">
												<xs:minInclusive value="0"/>
												<xs:maxInclusive value="2147483647"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="abortSessionIfTaskFail"	type="xs:boolean" use="optional" default="false">
										<xs:annotation>
											<xs:documentation>
										Specifies whether the session is aborted if a task fails.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="abortSessionIfClientDisconnect"	type="xs:boolean" use="optional" default="true">
										<xs:annotation>
											<xs:documentation>
											Specifies whether the session is aborted if the session
manager detects that the connection between the client and the session
manager is broken.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
									<xs:attribute name="persistSessionHistory" use="optional" default="all">
										<xs:annotation>
											<xs:documentation>
											Specifies whether to persist session history. If any
form of task history is retained, session history must also be retained.
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:normalizedString">
												<xs:enumeration	value="none"/>
												<xs:enumeration	value="all"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="persistTaskHistory"	use="optional" default="error">
										<xs:annotation>
											<xs:documentation>
											Specifies whether to retain no task history, all task
history, or only task history for error tasks
											</xs:documentation>
										</xs:annotation>
										<xs:simpleType>
											<xs:restriction	base="xs:normalizedString">
												<xs:enumeration	value="none"/>
												<xs:enumeration	value="all"/>
												<xs:enumeration	value="error"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="discardResultsOnDelivery" type="xs:boolean"	use="optional" default="true">
										<xs:annotation>
											<xs:documentation>
												Specifies whether the system discards task output for
the session when output has been retrieved by the client.
											</xs:documentation>
										</xs:annotation>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element	name="Service" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>
						Name of the service to run for this application. The
service name must be unique within the application.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:sequence>
							<xs:element	name="osTypes">
								<xs:annotation>
									<xs:documentation>
										Operating system types.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element	name="osType" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>
												Configuration for a	specific operating system.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:sequence>
													<xs:element	name="env" minOccurs="0" maxOccurs="unbounded">
														<xs:annotation>
															<xs:documentation>
																The	environment	configuration for the operating	system.
															</xs:documentation>
														</xs:annotation>
														<xs:complexType>
															<xs:simpleContent>
																<xs:extension base="xs:normalizedString">
																	<xs:attribute name="name" type="xs:normalizedString" use="required">
																		<xs:annotation>
																			<xs:documentation>
																			Name of an environment variable to be applied to the
service. 
																			</xs:documentation>
																		</xs:annotation>
																	</xs:attribute>
																</xs:extension>
															</xs:simpleContent>
														</xs:complexType>
													</xs:element>
												</xs:sequence>
												<xs:attribute name="name" type="xs:normalizedString" use="required">
													<xs:annotation>
														<xs:documentation>
														Operating system environment in which to run the service.
Symphony uses this information to determine where the executable
for the service is located.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="logDirectory" type="xs:normalizedString" use="optional">
													<xs:annotation>
														<xs:documentation>
															Used for log retrieval through the Platform Management
Console. Path to the directory in which logs are written by services
for this application. The path can be any desired path but the path
must be the same on all compute hosts. 
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="fileNamePattern" type="xs:normalizedString"	use="optional">
													<xs:annotation>
														<xs:documentation>
														Used for log retrieval through the Platform Management
Console. File naming convention for service log files written to
the logDirectory. Specify how your files are named. When retrieving
logs for a specific task, the system will look for log files that
partially match the file name pattern. If you are going to name
files with the task ID or session ID, specify the variables %taskId%
or %sessionId%. 
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="subDirectoryPattern" type="xs:normalizedString"	use="optional">
													<xs:annotation>
														<xs:documentation>
															Used for log retrieval through the Platform Management
Console. Convention for naming subdirectories in the logDirectory.
If you want to name subdirectories according to session ID or task
ID use the variables %sessionId%, %taskId%. When retrieving logs,
the system will look for log files in subdirectories that partially match
the sub-directory pattern.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="startCmd" type="xs:string" use="required">
													<xs:annotation>
														<xs:documentation>
                                                           Relative path to the program executable for the service.
Use ${SOAM_DEPLOY_DIR} in your path as this is the deployment directory
in the system. For example, ${SOAM_DEPLOY_DIR}/myservice/myservice.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="workDir" type="xs:string" use="optional">
													<xs:annotation>
														<xs:documentation>
															Absolute or relative path on the compute host or a shared
location, to the directory in which the service creates files. A
relative path is relative to SOAM_HOME.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="packageUrl"	type="xs:normalizedString" use="optional">
													<xs:annotation>
														<xs:documentation>
													For information purposes only. Setting is not used by
the system.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="runAs" type="xs:normalizedString" use="optional">
													<xs:annotation>
														<xs:documentation>
													For information purposes only. Setting is not used by
the system.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="preExecCmd"	type="xs:string" use="optional">
													<xs:annotation>
														<xs:documentation>
														When using a deployment tool other than soamdeploy, the
command specified here is used to copy the service program to the
local hos where the pre-execution command is running.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="postExecCmd" type="xs:string" use="optional">
													<xs:annotation>
														<xs:documentation>
														  For information purposes only. Setting is not used by
the system.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element	name="Control" minOccurs="0">
								<xs:annotation>
									<xs:documentation>
										Configuration for control options.
									</xs:documentation>
								</xs:annotation>
								<xs:complexType>
									<xs:sequence>
										<xs:element	name="Timeout" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>
													Timeout	options.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="method"	use="required">
													<xs:annotation>
														<xs:documentation>
														Specifies the Symphony API method to monitor for response
time.
														</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction	base="xs:normalizedString">
															<xs:enumeration	value="Register"/>
															<xs:enumeration	value="CreateService"/>
															<xs:enumeration	value="DestroyService"/>
															<xs:enumeration	value="SessionEnter"/>
															<xs:enumeration	value="SessionLeave"/>
															<xs:enumeration	value="Invoke"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
												<xs:attribute name="duration" type="xs:positiveInteger"	use="required">
													<xs:annotation>
														<xs:documentation>
														Number of seconds to wait for method completion before
the service times out.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
										<xs:element	name="ControlCode" minOccurs="0" maxOccurs="unbounded">
											<xs:annotation>
												<xs:documentation>
													Options	to configure control monitors.
												</xs:documentation>
											</xs:annotation>
											<xs:complexType>
												<xs:attribute name="method"	use="required">
													<xs:annotation>
														<xs:documentation>
														 Specifies the Symphony API method to monitor for control
codes.
														</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction	base="xs:normalizedString">
															<xs:enumeration	value="Register"/>
															<xs:enumeration	value="CreateService"/>
															<xs:enumeration	value="DestroyService"/>
															<xs:enumeration	value="SessionEnter"/>
															<xs:enumeration	value="SessionLeave"/>
															<xs:enumeration	value="Invoke"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
												<xs:attribute name="code" type="xs:integer"	use="required">
													<xs:annotation>
														<xs:documentation>
															Specifies the code the method returns.
														</xs:documentation>
													</xs:annotation>
												</xs:attribute>
												<xs:attribute name="action"	use="required">
													<xs:annotation>
														<xs:documentation>
															 Specifies the action to perform when a method programmatically
returns a particular code through the Symphony API 
														</xs:documentation>
													</xs:annotation>
													<xs:simpleType>
														<xs:restriction	base="xs:normalizedString">
															<xs:enumeration	value="Restart"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:complexType>
										</xs:element>
                                        <xs:element name="Method" minOccurs="0" maxOccurs="unbounded">
                                            <xs:annotation>
                                                <xs:documentation>
                                                    Application error handling options for one method.
                                                </xs:documentation>
                                            </xs:annotation>
                                            <xs:complexType>
                                                <xs:choice minOccurs="0" maxOccurs="unbounded">
                                                    <xs:element name="Timeout" minOccurs="0" maxOccurs="1">
                                                        <xs:annotation>
                                                            <xs:documentation>
                                                                Timeout options.
                                                            </xs:documentation>
                                                        </xs:annotation>
                                                        <xs:complexType>
                                                            <xs:attribute name="duration" type="xs:nonNegativeInteger" use="required">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the number of seconds to wait for method completion before the service times out.
                                                                        Range: 0 or more. 0 means that timeout never happens. 
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                            </xs:attribute>
                                                            <xs:attribute name="actionOnSI">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the action on service/host to perform when the service times out.
                                                                        Values: blockHost | restartService
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                                <xs:simpleType>
                                                                    <xs:restriction base="xs:normalizedString">
                                                                        <xs:enumeration value="blockHost"/>
                                                                        <xs:enumeration value="restartService"/>
                                                                    </xs:restriction>
                                                                </xs:simpleType>
                                                            </xs:attribute>
                                                            <xs:attribute name="actionOnWorkload">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the action on session/task to perform when the service times out.
                                                                        fatal means not rerun the workload, failure means rerun the workload.
                                                                        Values:  fail  | retry
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                                <xs:simpleType>
                                                                    <xs:restriction base="xs:normalizedString">
                                                                        <xs:enumeration value="fail"/>
                                                                        <xs:enumeration value="retry"/>
                                                                    </xs:restriction>
                                                                </xs:simpleType>
                                                            </xs:attribute>
                                                        </xs:complexType>
                                                    </xs:element>
                                                    <xs:element name="Exit" minOccurs="0" maxOccurs="1">
                                                        <xs:annotation>
                                                            <xs:documentation>
                                                                Process exit options.
                                                            </xs:documentation>
                                                        </xs:annotation>
                                                        <xs:complexType>
                                                            <xs:attribute name="actionOnSI">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the action on service/host to perform when the service process exits.
                                                                        Values: blockHost | restartService
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                                <xs:simpleType>
                                                                    <xs:restriction base="xs:normalizedString">
                                                                        <xs:enumeration value="blockHost"/>
                                                                        <xs:enumeration value="restartService"/>
                                                                    </xs:restriction>
                                                                </xs:simpleType>
                                                            </xs:attribute>
                                                            <xs:attribute name="actionOnWorkload">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the action on session/task to perform when the service process exits.
                                                                        fatal means not rerun the workload, failure means rerun the workload.
                                                                        Values: fail  | retry
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                                <xs:simpleType>
                                                                    <xs:restriction base="xs:normalizedString">
                                                                        <xs:enumeration value="fail"/>
                                                                        <xs:enumeration value="retry"/>
                                                                    </xs:restriction>
                                                                </xs:simpleType>
                                                            </xs:attribute>
                                                        </xs:complexType>
                                                    </xs:element>
                                                    <xs:element name="Return" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                            <xs:documentation>
                                                                Options to configure control monitors on return without exception.
                                                            </xs:documentation>
                                                        </xs:annotation>
                                                        <xs:complexType>
                                                            <xs:attribute name="controlCode" type="xs:nonNegativeInteger"  default="0">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the code the method returns.  This control code is returned 
                                                                        through the Symphony API SessionContext::SetControlCode method. An 
                                                                        action the system performs for each control code must be specified in 
                                                                        the application profile action attribute. "0" is the default control code without 
                                                                        the API.
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                            </xs:attribute>
                                                            <xs:attribute name="actionOnSI">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the action on service/host to perform when a method programmatically returns 
                                                                        a particular code through the Symphony API SessionContext::SetControlCode method.
                                                                        Values: blockHost | restartService | keepAlive
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                                <xs:simpleType>
                                                                    <xs:restriction base="xs:normalizedString">
                                                                        <xs:enumeration value="blockHost"/>
                                                                        <xs:enumeration value="restartService"/>
                                                                        <xs:enumeration value="keepAlive"/>
                                                                    </xs:restriction>
                                                                </xs:simpleType>
                                                            </xs:attribute>
                                                            <xs:attribute name="actionOnWorkload">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the action on session/task to perform when a method programmatically returns 
                                                                        a particular code through the Symphony API SessionContext::SetControlCode method.
                                                                        Values: fail  | retry | passResult
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                                <xs:simpleType>
                                                                    <xs:restriction base="xs:normalizedString">
                                                                        <xs:enumeration value="fail"/>
                                                                        <xs:enumeration value="retry"/>
                                                                        <xs:enumeration value="succeed"/>
                                                                    </xs:restriction>
                                                                </xs:simpleType>
                                                            </xs:attribute>
                                                        </xs:complexType>
                                                    </xs:element>
                                                    <xs:element name="Exception" minOccurs="0" maxOccurs="unbounded">
                                                        <xs:annotation>
                                                            <xs:documentation>
                                                                Options to configure control monitors on return with exception.
                                                            </xs:documentation>
                                                        </xs:annotation>
                                                        <xs:complexType>
                                                            <xs:attribute name="type" use="required">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the excetpion type which the service returns with.
                                                                        Values: fatal | failure
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                                <xs:simpleType>
                                                                    <xs:restriction base="xs:normalizedString">
                                                                        <xs:enumeration value="fatal"/>
                                                                        <xs:enumeration value="failure"/>
                                                                    </xs:restriction>
                                                                </xs:simpleType>
                                                            </xs:attribute>
                                                            <xs:attribute name="controlCode" type="xs:nonNegativeInteger" default="0">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the code the method returns.  This control code is returned 
                                                                        through the Symphony API SessionContext::SetControlCode method. An 
                                                                        action the system performs for each control code must be specified in 
                                                                        the application profile action attribute.  "0" is the default control code without 
                                                                        the API.
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                            </xs:attribute>
                                                            <xs:attribute name="actionOnSI">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the action on service/host to perform when a method programmatically returns 
                                                                        a particular code through the Symphony API SessionContext::SetControlCode method.
                                                                        Values: blockHost | restartService | keepAlive
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                                <xs:simpleType>
                                                                    <xs:restriction base="xs:normalizedString">
                                                                        <xs:enumeration value="blockHost"/>
                                                                        <xs:enumeration value="restartService"/>
                                                                        <xs:enumeration value="keepAlive"/>
                                                                    </xs:restriction>
                                                                </xs:simpleType>
                                                            </xs:attribute>
                                                            <xs:attribute name="actionOnWorkload">
                                                                <xs:annotation>
                                                                    <xs:documentation>
                                                                        Specifies the action on session/task to perform when a method programmatically returns 
                                                                        a particular code through the Symphony API SessionContext::SetControlCode method.
                                                                        Values: fail  | retry 
                                                                    </xs:documentation>
                                                                </xs:annotation>
                                                                <xs:simpleType>
                                                                    <xs:restriction base="xs:normalizedString">
                                                                        <xs:enumeration value="fail"/>
                                                                        <xs:enumeration value="retry"/>
                                                                    </xs:restriction>
                                                                </xs:simpleType>
                                                            </xs:attribute>
                                                        </xs:complexType>
                                                    </xs:element>
                                                </xs:choice>
                                                <xs:attribute name="name" use="required">
                                                    <xs:annotation>
                                                        <xs:documentation>
                                                            Specifies the Symphony API method to monitor for application error handling.
                                                            Values: CreateService | DestroyService | Invoke | Register | SessionEnter | SessionLeave
                                                        </xs:documentation>
                                                    </xs:annotation>
                                                    <xs:simpleType>
                                                        <xs:restriction base="xs:normalizedString">
                                                            <xs:enumeration value="Register"/>
                                                            <xs:enumeration value="CreateService"/>
                                                            <xs:enumeration value="SessionEnter"/>
                                                            <xs:enumeration value="Invoke"/>
                                                            <xs:enumeration value="SessionLeave"/>
                                                            <xs:enumeration value="DestroyService"/>
                                                        </xs:restriction>
                                                    </xs:simpleType>
                                                </xs:attribute>
                                            </xs:complexType>
                                        </xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
						<xs:attribute name="name" type="xs:normalizedString" use="required">
							<xs:annotation>
								<xs:documentation>
								Name of the service to run for this application. The
service name must be unique within the application.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="description" type="xs:string" use="optional">
							<xs:annotation>
								<xs:documentation>
									String that describes the service.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="default" type="xs:boolean" use="optional">
							<xs:annotation>
								<xs:documentation>
								Identifies a service as the default service, which means
that the service will be immediately prestarted when the session
manager starts. Used for performance.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="packageName" use="optional">
							<xs:annotation>
								<xs:documentation>
									Name assigned to the service package during deployment.
The value you specify here must match the value specified during
deployment.
								</xs:documentation>
							</xs:annotation>
							<xs:simpleType>
								<xs:restriction	base="xs:normalizedString">
									<xs:minLength value="1"/>
									<xs:maxLength value="1024"/>
								</xs:restriction>
							</xs:simpleType>
						</xs:attribute>
						<xs:attribute name="maxOtherInstances" type="xs:nonNegativeInteger"	use="optional">
							<xs:annotation>
								<xs:documentation>
									Limits the number of service instances that can run concurrently.
Used for performance.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
						<xs:attribute name="deploymentTimeout" type="xs:positiveInteger" use="optional">
							<xs:annotation>
								<xs:documentation>
									Maximum time, in seconds, required to connect to the
repository server and the maximum time required to download a file
from the repository server.
								</xs:documentation>
							</xs:annotation>
						</xs:attribute>
					</xs:complexType>
				</xs:element>
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element	name="Version" type="xs:string"	minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Version	of Symphony	installed and that the application is to use.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element	name="ApplicationProfileGuid" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								For	internal system	use	only.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element	name="PackageVersion" minOccurs="0"	maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								For	internal system	use	only.
							</xs:documentation>
						</xs:annotation>
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:string">
									<xs:attribute name="packageName" type="xs:normalizedString"	use="optional"/>
									<xs:attribute name="version" type="xs:normalizedString"	use="optional"/>
								</xs:extension>
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="name" type="xs:normalizedString" use="optional"/>
			<xs:attribute name="version" type="xs:normalizedString"	use="optional"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
